server:
  port: 8080

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/aurora?serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    password:
    hikari:
      minimum-idle: 10
      idle-timeout: 180000
      maximum-pool-size: 100
      auto-commit: true
      pool-name: MyHikariCP
      max-lifetime: 60000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  data:
    redis:
      host:
      port: 6477
      password:
      database: 0
      lettuce:
        pool:
          min-idle: 10
          max-idle: 100
          max-active: 100
          max-wait: 10000

  rabbitmq:
    host:
    port: 5672
    username: blog
    password:
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000

#  elasticsearch:
#      uris: 117.72.14.87:9200
#      password: 3m3a56BDbUNufQQ
#      username: elastic


  mail:
    host: smtp.qq.com
    username: 3487393070@qq.com
    password: uolitraieemacjdb # 授权码
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
          ssl:
            enable: true
          starttls:
            enable: true
            required: true

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

jwt:
  secret: bokebokebokebokebokebokeboke555bokebokebokebokebokebokeboke555bokebokebokebokebokebokeboke555bokebokebokebokebokebokeboke555bokebokebokebokebokebokeboke555bokebokebokebokebokebokeboke555bokebokebokebokebokebokeboke555ebokeboke555ebokeboke555ebokeboke555222

search:
  mode: elasticsearch

upload:
  mode: minio
  oss:
    url: http://Bucket域名/
    endpoint: OSS配置endpoint
    accessKeyId: OSS配置accessKeyId
    accessKeySecret: OSS配置accessKeySecret
    bucketName: OSS配置bucketName
  minio:
    url:
    endpoint:
    accesskey:
    secretKey:
    bucketName: blog

website:
  url: http://127.0.0.1

qq:
  app-id: QQ APPID
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

es:
  serverUrl:
  apiKey: